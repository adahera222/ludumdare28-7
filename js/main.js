// Generated by CoffeeScript 1.6.3
var Game, GameState;

GameState = (function() {
  function GameState() {
    var _this = this;
    this.assetManager = new AssetManager();
    this.loadAssets();
    this.assetManager.start(function() {
      _this.eventManager = new EventManager();
      _this.entityManager = new EntityManager(window.components);
      return _this.create();
    });
  }

  GameState.prototype.start = function(cq) {
    var _this = this;
    this.cq = cq;
    return this.cq.framework({
      onstep: function(delta, time) {
        return _this.step(delta, time);
      },
      onrender: function(delta, time) {
        return _this.render(delta, time);
      },
      onkeydown: function(key) {
        return _this.keyDown(key);
      },
      onkeyup: function(key) {
        return _this.keyUp(key);
      }
    });
  };

  GameState.prototype.loadAssets = function() {};

  GameState.prototype.create = function() {};

  GameState.prototype.step = function(delta, time) {};

  GameState.prototype.render = function(delta, time) {};

  GameState.prototype.keyUp = function(key) {};

  GameState.prototype.keyDown = function(key) {};

  return GameState;

})();

Game = (function() {
  Game.SCREEN_WIDTH = 320;

  Game.SCREEN_HEIGHT = 288;

  Game.GRID_SIZE = 32;

  Game.states = [];

  function Game() {
    this.cq = cq(Game.SCREEN_WIDTH, Game.SCREEN_HEIGHT).appendTo('.gameboy');
    this.states.push(new TitleScreenState());
  }

  Game.prototype.pushState = function(state) {
    return this.states.push(state);
  };

  Game.prototype.popState = function() {
    return this.states.pop();
  };

  return Game;

})();

window.game = new Game();
